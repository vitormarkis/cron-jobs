generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(cuid())
  name                  String?
  username              String         @unique
  password              String
  profile_pic           String?
  created_at            DateTime       @default(now())
  Post                  Post[]
  user_bids             Bids[]
  notifications         Notification[] @relation("user_notification_owner")
  created_notifications Notification[] @relation("subject_author_id")

  @@map("users")
}

model Post {
  id                String   @id @default(cuid())
  text              String
  user_id           String
  announcement_date DateTime
  active            Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  user              User     @relation(fields: [user_id], references: [id])
  post_bids         Bids[]

  @@map("posts")
}

model Bids {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_id    String
  post_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)

  @@unique([user_id, post_id])
  @@map("bids")
}

model Notification {
  id                String              @id @default(cuid())
  created_at        DateTime            @default(now())
  action            NotificationActions
  subject           String
  read              Boolean             @default(false)
  subject_author_id String
  subject_author    User                @relation(name: "subject_author_id", fields: [subject_author_id], references: [id], onDelete: Cascade)
  user_id           String
  user              User                @relation(name: "user_notification_owner", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("notifications")
}

enum NotificationActions {
  MAKE_A_BID_ON_POST
}
